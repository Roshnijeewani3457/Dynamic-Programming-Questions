// Approach: If sum is odd then there is no chance of partition.
             If sum is even there can be chance of equal partition.If in a array subset with (sum of array)/2 exists then the array can be divided into 2 equal sum partition. 
class Solution{
    static int equalPartition(int N, int arr[])
    {
        int sum=0;
        for(int i=0;i<N;i++)
        {
            sum+=arr[i];
        }
      if(sum%2!=0)
      {
         return 0;  
      }
      int target=sum/2;
      int dp[][]=new int[N+1][target+1];
      for(int i=0;i<N+1;i++)
      {
          dp[i][0]=1;
      }
      for(int i=1;i<target+1;i++)
      {
          dp[0][i]=0;
      }
      for(int i=1;i<N+1;i++)
      {  
        for(int j=1;j<target+1;j++)
        {
             if(arr[i-1]<=j)
             {
                 dp[i][j]=(dp[i-1][j-arr[i-1]] | dp[i-1][j]);
             }
          else
          {
            dp[i][j]=dp[i-1][j];
          }
        }
      }
     return dp[N][target]; 
    }
}
